<?xml version="1.0" ?>
<robot name="diff_drive" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <xacro:include filename="$(find pca9685_ros2_control_example)/urdf/materials.xacro" />
  <xacro:include filename="$(find pca9685_ros2_control_example)/urdf/wheel.xacro" />



  <ros2_control name="pca9685_ros2_control_example" type="system">
    <hardware>
      <plugin>pca9685_hardware_interface/Pca9685SystemHardware</plugin>
    </hardware>
    
    <joint name="front_left_joint">
      <command_interface name="velocity"/>
      <state_interface name="velocity"/>
    </joint>
    <joint name="rear_right_joint">
      <command_interface name="velocity"/>
      <state_interface name="velocity"/>
    </joint>
    <joint name="rear_left_joint">
      <command_interface name="velocity"/>
      <state_interface name="velocity"/>
    </joint>
    <joint name="front_right_joint">
      <command_interface name="velocity"/>
      <state_interface name="velocity"/>
    </joint>
    <joint name="joint_4">
      <command_interface name="velocity"/>
      <state_interface name="velocity"/>
    </joint>
    <joint name="joint_5">
      <command_interface name="velocity"/>
      <state_interface name="velocity"/>
    </joint>
  </ros2_control>




  <link name="base_link">
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="97.36517446475621"/>
      <inertia ixx="8.084237" iyy="15.065847" izz="23.090003" ixy="-0.0" iyz="-0.0" ixz="0.0"/>
    </inertial>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="file://$(find pca9685_ros2_control_example)/urdf/meshes/base_link.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="file://$(find pca9685_ros2_control_example)/urdf/meshes/base_link.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>

  <xacro:wheel name="front_right" xyz="0.35 -0.233285 0.0" rpy="0 0 2.07079698039" direction="1" />
  <xacro:wheel name="rear_right" xyz="-0.35 -0.233285 0.0" rpy="0 0 1.07079566641" direction="1" />
  <xacro:wheel name="front_left" xyz="0.35 0.233285 0.0" rpy="0 0 -2.07079698039" direction="-1" />
  <xacro:wheel name="rear_left" xyz="-0.35 0.233285 0.0" rpy="0 0 -1.07079566641" direction="-1" />

  <joint name="imu_joint" type="fixed">

  <!-- 
  How to determine orientation of IMU in the robot frame:
    0. Calibrate magnetometer with robot_calibration
    1. Set origin to zero
        <origin xyz="0 0 0.05" rpy="0 0 0"/>
    2. Restart model
        docker compose restart ros-pca9685-ros2-control 
    3. Get rotation x,y,z,w from tf     frame_id: odom,  child_frame_id: base_link
    4. 
      Enter as quaternion here: https://www.andre-gaschler.com/rotationconverter/
      Set Euler angles (radians) to ZYX
    5. Set origin to obtained angles
        <origin xyz="0 0 0.05" rpy="-0.33 -0.06 -1.83"/>
    6. Restart model (Repeat Step 2) and ros-winch-control
    7. Sanity check: odom should be aligned with base_link when facing east
                     estimated_terrain_mean should be ~0
  -->
  
    <origin xyz="0 0 0.05" rpy="-0.324718 -0.0092129 2.9132021"/>
    <parent link="base_link"/>
    <child link="imu_link"/>
  </joint>

  <link name="imu_link">
    <collision>
      <geometry>
        <sphere radius="0.05"/>
      </geometry>
    </collision>
    <visual>
      <geometry>
        <sphere radius="0.05"/>
      </geometry>
      <material name="white" />

    </visual>
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 1.57"/>
      <mass value="0.005"/>
      <inertia ixx="0.1" ixy="0.0" ixz="0.0" iyy="0.1" iyz="0.0" izz="0.1"/>
    </inertial>
  </link>

  <joint name="gnss_joint" type="fixed">
    <origin xyz="0 0 -0.05" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="gnss_link"/>
  </joint>

  <link name="gnss_link">
    <collision>
      <geometry>
        <sphere radius="0.05"/>
      </geometry>
    </collision>
    <visual>
      <geometry>
        <sphere radius="0.05"/>
      </geometry>
      <material name="black" />
    </visual>
    <inertial>
      <origin xyz="0 0 0.1" rpy="0.3 1.6 -0.4"/>
      <mass value="0.005"/>
      <inertia ixx="0.1" ixy="0.0" ixz="0.0" iyy="0.1" iyz="0.0" izz="0.1"/>
    </inertial>
  </link>

</robot>
